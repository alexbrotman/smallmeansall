{"version":3,"sources":["webpack:///../node_modules/@shopify/theme-currency/dist/currency.cjs.js","webpack:///../node_modules/@shopify/theme-product-form/listeners.js","webpack:///../node_modules/@shopify/theme-product/theme-product.js","webpack:///../node_modules/@shopify/theme-product-form/theme-product-form.js","webpack:///./scripts/sections/product.js","webpack:///../node_modules/@shopify/theme-sections/section.js","webpack:///../node_modules/@shopify/theme-sections/theme-sections.js"],"names":["Object","defineProperty","exports","value","formatMoney","cents","format","replace","placeholderRegex","formatString","moneyFormat","formatWithDelimiters","number","precision","arguments","length","thousands","decimal","isNaN","parts","toFixed","split","match","18","t","e","n","Listeners","this","entries","_validateProductStructure","product","TypeError","keys","constructor","Error","prototype","add","element","event","fn","push","addEventListener","removeAll","filter","listener","removeEventListener","selectors","idInput","optionInput","quantityInput","propertyInput","ProductForm","options","variants","_listeners","_onSubmit","bind","optionInputs","_initInputs","onOptionChange","quantityInputs","onQuantityChange","propertyInputs","onPropertyChange","_serializeInputValues","inputs","transform","reduce","input","checked","type","name","destroy","item","exec","variant","collection","Array","isArray","every","option","index","hasOwnProperty","optionArray","forEach","i","toLowerCase","getVariantFromSerializedArray","properties","quantity","Number","parseInt","_setIdInputValue","idInputElement","querySelector","document","createElement","appendChild","toString","dataset","_getProductFormEventData","id","onFormSubmit","_onFormEvent","cb","Function","selector","slice","call","querySelectorAll","map","classes","product_selectors","submitButton","submitButtonText","comparePrice","comparePriceText","priceWrapper","imageWrapper","visibleImageWrapper","imageWrapperById","productForm","productPrice","thumbnail","thumbnailById","thumbnailActive","theme_sections","b","[object Object]","productFormElement","getProductJson","productHandle","onFormOptionChange","onThumbnailClick","onThumbnailKeyup","container","handle","fetch","then","response","json","renderImages","renderPrice","renderComparePrice","renderSubmitButton","updateBrowserHistory","target","closest","preventDefault","renderFeaturedImage","thumbnailId","renderActiveThumbnail","keyCode","visibleFeaturedImageWrapper","theme_a11y","c","available","disabled","innerText","theme","strings","addToCart","soldOut","unavailable","featured_image","priceElement","classList","toggle","currency_cjs","price","comparePriceElement","compareTextElement","compare_at_price","remove","activeThumbnail","inactiveThumbnail","removeAttribute","setAttribute","activeImage","inactiveImage","enableHistoryState","url","test","concat","window","location","href","history","replaceState","path","SECTION_ID_ATTR","Section","Element","getAttribute","extensions","assign","onLoad","onUnload","onSelect","onDeselect","onBlockSelect","onBlockDeselect","extend","extension","extensionClone","init","apply","varArgs","to","nextSource","nextKey","writable","configurable","__webpack_require__","d","__webpack_exports__","register","load","SECTION_TYPE_ATTR","Shopify","sections","registered","instances","TypedSection","create","types","containers","normalizeType","normalizeContainers","getInstances","filteredInstances","NodeList","isPrototypeOf","firstElement","instance","getInstanceById","designMode","detail","sectionId","indexOf","splice","blockId"],"mappings":"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","file":"template.index@template.product.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatMoney = formatMoney;\n/**\n * Currency Helpers\n * -----------------------------------------------------------------------------\n * A collection of useful functions that help with currency formatting\n *\n * Current contents\n * - formatMoney - Takes an amount in cents and returns it as a formatted dollar value.\n *\n */\n\nvar moneyFormat = '${{amount}}';\n\n/**\n * Format money values based on your shop currency settings\n * @param  {Number|string} cents - value in cents or dollar amount e.g. 300 cents\n * or 3.00 dollars\n * @param  {String} format - shop money_format setting\n * @return {String} value - formatted value\n */\nfunction formatMoney(cents, format) {\n  if (typeof cents === 'string') {\n    cents = cents.replace('.', '');\n  }\n  var value = '';\n  var placeholderRegex = /\\{\\{\\s*(\\w+)\\s*\\}\\}/;\n  var formatString = format || moneyFormat;\n\n  function formatWithDelimiters(number) {\n    var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n    var thousands = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ',';\n    var decimal = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n\n    if (isNaN(number) || number == null) {\n      return 0;\n    }\n\n    number = (number / 100.0).toFixed(precision);\n\n    var parts = number.split('.');\n    var dollarsAmount = parts[0].replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1' + thousands);\n    var centsAmount = parts[1] ? decimal + parts[1] : '';\n\n    return dollarsAmount + centsAmount;\n  }\n\n  switch (formatString.match(placeholderRegex)[1]) {\n    case 'amount':\n      value = formatWithDelimiters(cents, 2);\n      break;\n    case 'amount_no_decimals':\n      value = formatWithDelimiters(cents, 0);\n      break;\n    case 'amount_with_comma_separator':\n      value = formatWithDelimiters(cents, 2, '.', ',');\n      break;\n    case 'amount_no_decimals_with_comma_separator':\n      value = formatWithDelimiters(cents, 0, '.', ',');\n      break;\n  }\n\n  return formatString.replace(placeholderRegex, value);\n}\n","export default function Listeners() {\n  this.entries = [];\n}\n\nListeners.prototype.add = function(element, event, fn) {\n  this.entries.push({ element: element, event: event, fn: fn });\n  element.addEventListener(event, fn);\n};\n\nListeners.prototype.removeAll = function() {\n  this.entries = this.entries.filter(function(listener) {\n    listener.element.removeEventListener(listener.event, listener.fn);\n    return false;\n  });\n};\n","/**\n * Find a match in the project JSON (using a ID number) and return the variant (as an Object)\n * @param {Object} product Product JSON object\n * @param {Number} value Accepts Number (e.g. 6908023078973)\n * @returns {Object} The variant object once a match has been successful. Otherwise null will be return\n */\nexport function getVariantFromId(product, value) {\n  _validateProductStructure(product);\n\n  if (typeof value !== 'number') {\n    throw new TypeError(value + ' is not a Number.');\n  }\n\n  var result = product.variants.filter(function(variant) {\n    return variant.id === value;\n  });\n\n  return result[0] || null;\n}\n\n/**\n * Convert the Object (with 'name' and 'value' keys) into an Array of values, then find a match & return the variant (as an Object)\n * @param {Object} product Product JSON object\n * @param {Object} collection Object with 'name' and 'value' keys (e.g. [{ name: \"Size\", value: \"36\" }, { name: \"Color\", value: \"Black\" }])\n * @returns {Object || null} The variant object once a match has been successful. Otherwise null will be returned\n */\nexport function getVariantFromSerializedArray(product, collection) {\n  _validateProductStructure(product);\n\n  // If value is an array of options\n  var optionArray = _createOptionArrayFromOptionCollection(product, collection);\n  return getVariantFromOptionArray(product, optionArray);\n}\n\n/**\n * Find a match in the project JSON (using Array with option values) and return the variant (as an Object)\n * @param {Object} product Product JSON object\n * @param {Array} options List of submitted values (e.g. ['36', 'Black'])\n * @returns {Object || null} The variant object once a match has been successful. Otherwise null will be returned\n */\nexport function getVariantFromOptionArray(product, options) {\n  _validateProductStructure(product);\n  _validateOptionsArray(options);\n\n  var result = product.variants.filter(function(variant) {\n    return options.every(function(option, index) {\n      return variant.options[index] === option;\n    });\n  });\n\n  return result[0] || null;\n}\n\n/**\n * Creates an array of selected options from the object\n * Loops through the project.options and check if the \"option name\" exist (product.options.name) and matches the target\n * @param {Object} product Product JSON object\n * @param {Array} collection Array of object (e.g. [{ name: \"Size\", value: \"36\" }, { name: \"Color\", value: \"Black\" }])\n * @returns {Array} The result of the matched values. (e.g. ['36', 'Black'])\n */\nfunction _createOptionArrayFromOptionCollection(product, collection) {\n  _validateProductStructure(product);\n  _validateSerializedArray(collection);\n\n  var optionArray = [];\n\n  collection.forEach(function(option) {\n    for (var i = 0; i < product.options.length; i++) {\n      if (product.options[i].name.toLowerCase() === option.name.toLowerCase()) {\n        optionArray[i] = option.value;\n        break;\n      }\n    }\n  });\n\n  return optionArray;\n}\n\n/**\n * Check if the product data is a valid JS object\n * Error will be thrown if type is invalid\n * @param {Array} product Product JSON object\n */\nfunction _validateProductStructure(product) {\n  if (typeof product !== 'object') {\n    throw new TypeError(product + 'is not an object.');\n  }\n\n  if (Object.keys(product).length === 0 && product.constructor === Object) {\n    throw new Error(product + 'is empty.');\n  }\n}\n\n/**\n * Validate the structure of the array\n * It must be formatted like jQuery's serializeArray()\n * @param {Array} collection Array of object [{ name: \"Size\", value: \"36\" }, { name: \"Color\", value: \"Black\" }]\n */\nfunction _validateSerializedArray(collection) {\n  if (!Array.isArray(collection)) {\n    throw new TypeError(collection + 'is not an array.');\n  }\n\n  if (collection.length === 0) {\n    throw new Error(collection + 'is empty.');\n  }\n\n  if (collection[0].hasOwnProperty('name')) {\n    if (typeof collection[0].name !== 'string') {\n      throw new TypeError(\n        'Invalid value type passed for name of option ' +\n          collection[0].name +\n          '. Value should be string.'\n      );\n    }\n  } else {\n    throw new Error(collection[0] + 'does not contain name key.');\n  }\n}\n\n/**\n * Validate the structure of the array\n * It must be formatted as list of values\n * @param {Array} collection Array of object (e.g. ['36', 'Black'])\n */\nfunction _validateOptionsArray(options) {\n  if (Array.isArray(options) && typeof options[0] === 'object') {\n    throw new Error(options + 'is not a valid array of options.');\n  }\n}\n","import Listeners from './listeners';\nimport { getVariantFromSerializedArray } from '@shopify/theme-product';\n\nvar selectors = {\n  idInput: '[name=\"id\"]',\n  optionInput: '[name^=\"options\"]',\n  quantityInput: '[name=\"quantity\"]',\n  propertyInput: '[name^=\"properties\"]'\n};\n\n// Public Methods\n// -----------------------------------------------------------------------------\n\n/**\n * Returns a URL with a variant ID query parameter. Useful for updating window.history\n * with a new URL based on the currently select product variant.\n * @param {string} url - The URL you wish to append the variant ID to\n * @param {number} id  - The variant ID you wish to append to the URL\n * @returns {string} - The new url which includes the variant ID query parameter\n */\n\nexport function getUrlWithVariant(url, id) {\n  if (/variant=/.test(url)) {\n    return url.replace(/(variant=)[^&]+/, '$1' + id);\n  } else if (/\\?/.test(url)) {\n    return url.concat('&variant=').concat(id);\n  }\n\n  return url.concat('?variant=').concat(id);\n}\n\n/**\n * Constructor class that creates a new instance of a product form controller.\n *\n * @param {Element} element - DOM element which is equal to the <form> node wrapping product form inputs\n * @param {Object} product - A product object\n * @param {Object} options - Optional options object\n * @param {Function} options.onOptionChange - Callback for whenever an option input changes\n * @param {Function} options.onQuantityChange - Callback for whenever an quantity input changes\n * @param {Function} options.onPropertyChange - Callback for whenever a property input changes\n * @param {Function} options.onFormSubmit - Callback for whenever the product form is submitted\n */\nexport function ProductForm(element, product, options) {\n  this.element = element;\n  this.product = _validateProductObject(product);\n\n  options = options || {};\n\n  this._listeners = new Listeners();\n  this._listeners.add(\n    this.element,\n    'submit',\n    this._onSubmit.bind(this, options)\n  );\n\n  this.optionInputs = this._initInputs(\n    selectors.optionInput,\n    options.onOptionChange\n  );\n\n  this.quantityInputs = this._initInputs(\n    selectors.quantityInput,\n    options.onQuantityChange\n  );\n\n  this.propertyInputs = this._initInputs(\n    selectors.propertyInput,\n    options.onPropertyChange\n  );\n}\n\n/**\n * Cleans up all event handlers that were assigned when the Product Form was constructed.\n * Useful for use when a section needs to be reloaded in the theme editor.\n */\nProductForm.prototype.destroy = function() {\n  this._listeners.removeAll();\n};\n\n/**\n * Getter method which returns the array of currently selected option values\n *\n * @returns {Array} An array of option values\n */\nProductForm.prototype.options = function() {\n  return _serializeInputValues(this.optionInputs, function(item) {\n    var regex = /(?:^(options\\[))(.*?)(?:\\])/;\n    item.name = regex.exec(item.name)[2]; // Use just the value between 'options[' and ']'\n    return item;\n  });\n};\n\n/**\n * Getter method which returns the currently selected variant, or `null` if variant\n * doesn't exist.\n *\n * @returns {Object|null} Variant object\n */\nProductForm.prototype.variant = function() {\n  return getVariantFromSerializedArray(this.product, this.options());\n};\n\n/**\n * Getter method which returns a collection of objects containing name and values\n * of property inputs\n *\n * @returns {Array} Collection of objects with name and value keys\n */\nProductForm.prototype.properties = function() {\n  return _serializeInputValues(this.propertyInputs, function(item) {\n    var regex = /(?:^(properties\\[))(.*?)(?:\\])/;\n    item.name = regex.exec(item.name)[2]; // Use just the value between 'properties[' and ']'\n    return item;\n  });\n};\n\n/**\n * Getter method which returns the current quantity or 1 if no quantity input is\n * included in the form\n *\n * @returns {Array} Collection of objects with name and value keys\n */\nProductForm.prototype.quantity = function() {\n  return this.quantityInputs[0]\n    ? Number.parseInt(this.quantityInputs[0].value, 10)\n    : 1;\n};\n\n// Private Methods\n// -----------------------------------------------------------------------------\nProductForm.prototype._setIdInputValue = function(value) {\n  var idInputElement = this.element.querySelector(selectors.idInput);\n\n  if (!idInputElement) {\n    idInputElement = document.createElement('input');\n    idInputElement.type = 'hidden';\n    idInputElement.name = 'id';\n    this.element.appendChild(idInputElement);\n  }\n\n  idInputElement.value = value.toString();\n};\n\nProductForm.prototype._onSubmit = function(options, event) {\n  event.dataset = this._getProductFormEventData();\n\n  this._setIdInputValue(event.dataset.variant.id);\n\n  if (options.onFormSubmit) {\n    options.onFormSubmit(event);\n  }\n};\n\nProductForm.prototype._onFormEvent = function(cb) {\n  if (typeof cb === 'undefined') {\n    return Function.prototype;\n  }\n\n  return function(event) {\n    event.dataset = this._getProductFormEventData();\n    cb(event);\n  }.bind(this);\n};\n\nProductForm.prototype._initInputs = function(selector, cb) {\n  var elements = Array.prototype.slice.call(\n    this.element.querySelectorAll(selector)\n  );\n\n  return elements.map(\n    function(element) {\n      this._listeners.add(element, 'change', this._onFormEvent(cb));\n      return element;\n    }.bind(this)\n  );\n};\n\nProductForm.prototype._getProductFormEventData = function() {\n  return {\n    options: this.options(),\n    variant: this.variant(),\n    properties: this.properties(),\n    quantity: this.quantity()\n  };\n};\n\nfunction _serializeInputValues(inputs, transform) {\n  return inputs.reduce(function(options, input) {\n    if (\n      input.checked || // If input is a checked (means type radio or checkbox)\n      (input.type !== 'radio' && input.type !== 'checkbox') // Or if its any other type of input\n    ) {\n      options.push(transform({ name: input.name, value: input.value }));\n    }\n\n    return options;\n  }, []);\n}\n\nfunction _validateProductObject(product) {\n  if (typeof product !== 'object') {\n    throw new TypeError(product + ' is not an object.');\n  }\n\n  if (typeof product.variants[0].options === 'undefined') {\n    throw new TypeError(\n      'Product object is invalid. Make sure you use the product object that is output from {{ product | json }} or from the http://[your-product-url].js route'\n    );\n  }\n\n  return product;\n}\n","/**\n * Product Template Script\n * ------------------------------------------------------------------------------\n * A file that contains scripts highly couple code to the Product template.\n *\n * @namespace product\n */\n\nimport {getUrlWithVariant, ProductForm} from '@shopify/theme-product-form';\nimport {formatMoney} from '@shopify/theme-currency';\nimport {register} from '@shopify/theme-sections';\nimport {forceFocus} from '@shopify/theme-a11y';\n\nconst classes = {\n  hide: 'hide',\n};\n\nconst keyboardKeys = {\n  ENTER: 13,\n};\n\nconst selectors = {\n  submitButton: '[data-submit-button]',\n  submitButtonText: '[data-submit-button-text]',\n  comparePrice: '[data-compare-price]',\n  comparePriceText: '[data-compare-text]',\n  priceWrapper: '[data-price-wrapper]',\n  imageWrapper: '[data-product-image-wrapper]',\n  visibleImageWrapper: `[data-product-image-wrapper]:not(.${classes.hide})`,\n  imageWrapperById: (id) => `${selectors.imageWrapper}[data-image-id='${id}']`,\n  productForm: '[data-product-form]',\n  productPrice: '[data-product-price]',\n  thumbnail: '[data-product-single-thumbnail]',\n  thumbnailById: (id) => `[data-thumbnail-id='${id}']`,\n  thumbnailActive: '[data-product-single-thumbnail][aria-current]',\n};\n\nregister('product', {\n  async onLoad() {\n    const productFormElement = document.querySelector(selectors.productForm);\n\n    this.product = await this.getProductJson(\n      productFormElement.dataset.productHandle,\n    );\n    this.productForm = new ProductForm(productFormElement, this.product, {\n      onOptionChange: this.onFormOptionChange.bind(this),\n    });\n\n    this.onThumbnailClick = this.onThumbnailClick.bind(this);\n    this.onThumbnailKeyup = this.onThumbnailKeyup.bind(this);\n\n    this.container.addEventListener('click', this.onThumbnailClick);\n    this.container.addEventListener('keyup', this.onThumbnailKeyup);\n  },\n\n  onUnload() {\n    this.productForm.destroy();\n    this.removeEventListener('click', this.onThumbnailClick);\n    this.removeEventListener('keyup', this.onThumbnailKeyup);\n  },\n\n  getProductJson(handle) {\n    return fetch(`/products/${handle}.js`).then((response) => {\n      return response.json();\n    });\n  },\n\n  onFormOptionChange(event) {\n    const variant = event.dataset.variant;\n\n    this.renderImages(variant);\n    this.renderPrice(variant);\n    this.renderComparePrice(variant);\n    this.renderSubmitButton(variant);\n\n    this.updateBrowserHistory(variant);\n  },\n\n  onThumbnailClick(event) {\n    const thumbnail = event.target.closest(selectors.thumbnail);\n\n    if (!thumbnail) {\n      return;\n    }\n\n    event.preventDefault();\n\n    this.renderFeaturedImage(thumbnail.dataset.thumbnailId);\n    this.renderActiveThumbnail(thumbnail.dataset.thumbnailId);\n  },\n\n  onThumbnailKeyup(event) {\n    if (\n      event.keyCode !== keyboardKeys.ENTER ||\n      !event.target.closest(selectors.thumbnail)\n    ) {\n      return;\n    }\n\n    const visibleFeaturedImageWrapper = this.container.querySelector(\n      selectors.visibleImageWrapper,\n    );\n\n    forceFocus(visibleFeaturedImageWrapper);\n  },\n\n  renderSubmitButton(variant) {\n    const submitButton = this.container.querySelector(selectors.submitButton);\n    const submitButtonText = this.container.querySelector(\n      selectors.submitButtonText,\n    );\n\n    if (!variant) {\n      submitButton.disabled = true;\n      submitButtonText.innerText = theme.strings.unavailable;\n    } else if (variant.available) {\n      submitButton.disabled = false;\n      submitButtonText.innerText = theme.strings.addToCart;\n    } else {\n      submitButton.disabled = true;\n      submitButtonText.innerText = theme.strings.soldOut;\n    }\n  },\n\n  renderImages(variant) {\n    if (!variant || variant.featured_image === null) {\n      return;\n    }\n\n    this.renderFeaturedImage(variant.featured_image.id);\n    this.renderActiveThumbnail(variant.featured_image.id);\n  },\n\n  renderPrice(variant) {\n    const priceElement = this.container.querySelector(selectors.productPrice);\n    const priceWrapperElement = this.container.querySelector(\n      selectors.priceWrapper,\n    );\n\n    priceWrapperElement.classList.toggle(classes.hide, !variant);\n\n    if (variant) {\n      priceElement.innerText = formatMoney(variant.price, theme.moneyFormat);\n    }\n  },\n\n  renderComparePrice(variant) {\n    if (!variant) {\n      return;\n    }\n\n    const comparePriceElement = this.container.querySelector(\n      selectors.comparePrice,\n    );\n    const compareTextElement = this.container.querySelector(\n      selectors.comparePriceText,\n    );\n\n    if (!comparePriceElement || !compareTextElement) {\n      return;\n    }\n\n    if (variant.compare_at_price > variant.price) {\n      comparePriceElement.innerText = formatMoney(\n        variant.compare_at_price,\n        theme.moneyFormat,\n      );\n      compareTextElement.classList.remove(classes.hide);\n      comparePriceElement.classList.remove(classes.hide);\n    } else {\n      comparePriceElement.innerText = '';\n      compareTextElement.classList.add(classes.hide);\n      comparePriceElement.classList.add(classes.hide);\n    }\n  },\n\n  renderActiveThumbnail(id) {\n    const activeThumbnail = this.container.querySelector(\n      selectors.thumbnailById(id),\n    );\n    const inactiveThumbnail = this.container.querySelector(\n      selectors.thumbnailActive,\n    );\n\n    if (activeThumbnail === inactiveThumbnail) {\n      return;\n    }\n\n    inactiveThumbnail.removeAttribute('aria-current');\n    activeThumbnail.setAttribute('aria-current', true);\n  },\n\n  renderFeaturedImage(id) {\n    const activeImage = this.container.querySelector(\n      selectors.visibleImageWrapper,\n    );\n    const inactiveImage = this.container.querySelector(\n      selectors.imageWrapperById(id),\n    );\n\n    activeImage.classList.add(classes.hide);\n    inactiveImage.classList.remove(classes.hide);\n  },\n\n  updateBrowserHistory(variant) {\n    const enableHistoryState = this.productForm.element.dataset\n      .enableHistoryState;\n\n    if (!variant || enableHistoryState !== 'true') {\n      return;\n    }\n\n    const url = getUrlWithVariant(window.location.href, variant.id);\n    window.history.replaceState({path: url}, '', url);\n  },\n});\n","var SECTION_ID_ATTR = 'data-section-id';\n\nexport default function Section(container, properties) {\n  this.container = validateContainerElement(container);\n  this.id = container.getAttribute(SECTION_ID_ATTR);\n  this.extensions = [];\n\n  Object.assign(this, validatePropertiesObject(properties));\n\n  this.onLoad();\n}\n\nSection.prototype = {\n  onLoad: Function.prototype,\n  onUnload: Function.prototype,\n  onSelect: Function.prototype,\n  onDeselect: Function.prototype,\n  onBlockSelect: Function.prototype,\n  onBlockDeselect: Function.prototype,\n\n  extend: function extend(extension) {\n    this.extensions.push(extension); // Save original extension\n\n    var extensionClone = Object.assign({}, extension);\n    delete extensionClone.init; // Remove init function before assigning extension properties\n    Object.assign(this, extensionClone);\n\n    if (typeof extension.init === 'function') {\n      extension.init.apply(this);\n    }\n  }\n};\n\nfunction validateContainerElement(container) {\n  if (!(container instanceof Element)) {\n    throw new TypeError(\n      'Theme Sections: Attempted to load section. The section container provided is not a DOM element.'\n    );\n  }\n  if (container.getAttribute(SECTION_ID_ATTR) === null) {\n    throw new Error(\n      'Theme Sections: The section container provided does not have an id assigned to the ' +\n        SECTION_ID_ATTR +\n        ' attribute.'\n    );\n  }\n\n  return container;\n}\n\nfunction validatePropertiesObject(value) {\n  if (\n    (typeof value !== 'undefined' && typeof value !== 'object') ||\n    value === null\n  ) {\n    throw new TypeError(\n      'Theme Sections: The properties object provided is not a valid'\n    );\n  }\n\n  return value;\n}\n\n// Object.assign() polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill\nif (typeof Object.assign != 'function') {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, 'assign', {\n    value: function assign(target, varArgs) {\n      // .length of function is 2\n      'use strict';\n      if (target == null) {\n        // TypeError if undefined or null\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) {\n          // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    },\n    writable: true,\n    configurable: true\n  });\n}\n","/*\n * @shopify/theme-sections\n * -----------------------------------------------------------------------------\n *\n * A framework to provide structure to your Shopify sections and a load and unload\n * lifecycle. The lifecycle is automatically connected to theme editor events so\n * that your sections load and unload as the editor changes the content and\n * settings of your sections.\n */\n\nimport Section from './section';\n\nvar SECTION_TYPE_ATTR = 'data-section-type';\nvar SECTION_ID_ATTR = 'data-section-id';\n\nwindow.Shopify = window.Shopify || {};\nwindow.Shopify.theme = window.Shopify.theme || {};\nwindow.Shopify.theme.sections = window.Shopify.theme.sections || {};\n\nexport var registered = (window.Shopify.theme.sections.registered =\n  window.Shopify.theme.sections.registered || {});\nexport var instances = (window.Shopify.theme.sections.instances =\n  window.Shopify.theme.sections.instances || []);\n\nexport function register(type, properties) {\n  if (typeof type !== 'string') {\n    throw new TypeError(\n      'Theme Sections: The first argument for .register must be a string that specifies the type of the section being registered'\n    );\n  }\n\n  if (typeof registered[type] !== 'undefined') {\n    throw new Error(\n      'Theme Sections: A section of type \"' +\n        type +\n        '\" has already been registered. You cannot register the same section type twice'\n    );\n  }\n\n  function TypedSection(container) {\n    Section.call(this, container, properties);\n  }\n\n  TypedSection.constructor = Section;\n  TypedSection.prototype = Object.create(Section.prototype);\n  TypedSection.prototype.type = type;\n\n  return (registered[type] = TypedSection);\n}\n\nexport function unregister(types) {\n  types = normalizeType(types);\n\n  types.forEach(function(type) {\n    delete registered[type];\n  });\n}\n\nexport function load(types, containers) {\n  types = normalizeType(types);\n\n  if (typeof containers === 'undefined') {\n    containers = document.querySelectorAll('[' + SECTION_TYPE_ATTR + ']');\n  }\n\n  containers = normalizeContainers(containers);\n\n  types.forEach(function(type) {\n    var TypedSection = registered[type];\n\n    if (typeof TypedSection === 'undefined') {\n      return;\n    }\n\n    containers = containers.filter(function(container) {\n      // Filter from list of containers because container already has an instance loaded\n      if (isInstance(container)) {\n        return false;\n      }\n\n      // Filter from list of containers because container doesn't have data-section-type attribute\n      if (container.getAttribute(SECTION_TYPE_ATTR) === null) {\n        return false;\n      }\n\n      // Keep in list of containers because current type doesn't match\n      if (container.getAttribute(SECTION_TYPE_ATTR) !== type) {\n        return true;\n      }\n\n      instances.push(new TypedSection(container));\n\n      // Filter from list of containers because container now has an instance loaded\n      return false;\n    });\n  });\n}\n\nexport function unload(selector) {\n  var instancesToUnload = getInstances(selector);\n\n  instancesToUnload.forEach(function(instance) {\n    var index = instances\n      .map(function(e) {\n        return e.id;\n      })\n      .indexOf(instance.id);\n    instances.splice(index, 1);\n    instance.onUnload();\n  });\n}\n\nexport function extend(selector, extension) {\n  var instancesToExtend = getInstances(selector);\n\n  instancesToExtend.forEach(function(instance) {\n    instance.extend(extension);\n  });\n}\n\nexport function getInstances(selector) {\n  var filteredInstances = [];\n\n  // Fetch first element if its an array\n  if (NodeList.prototype.isPrototypeOf(selector) || Array.isArray(selector)) {\n    var firstElement = selector[0];\n  }\n\n  // If selector element is DOM element\n  if (selector instanceof Element || firstElement instanceof Element) {\n    var containers = normalizeContainers(selector);\n\n    containers.forEach(function(container) {\n      filteredInstances = filteredInstances.concat(\n        instances.filter(function(instance) {\n          return instance.container === container;\n        })\n      );\n    });\n\n    // If select is type string\n  } else if (typeof selector === 'string' || typeof firstElement === 'string') {\n    var types = normalizeType(selector);\n\n    types.forEach(function(type) {\n      filteredInstances = filteredInstances.concat(\n        instances.filter(function(instance) {\n          return instance.type === type;\n        })\n      );\n    });\n  }\n\n  return filteredInstances;\n}\n\nexport function getInstanceById(id) {\n  var instance;\n\n  for (var i = 0; i < instances.length; i++) {\n    if (instances[i].id === id) {\n      instance = instances[i];\n      break;\n    }\n  }\n  return instance;\n}\n\nexport function isInstance(selector) {\n  return getInstances(selector).length > 0;\n}\n\nfunction normalizeType(types) {\n  // If '*' then fetch all registered section types\n  if (types === '*') {\n    types = Object.keys(registered);\n\n    // If a single section type string is passed, put it in an array\n  } else if (typeof types === 'string') {\n    types = [types];\n\n    // If single section constructor is passed, transform to array with section\n    // type string\n  } else if (types.constructor === Section) {\n    types = [types.prototype.type];\n\n    // If array of typed section constructors is passed, transform the array to\n    // type strings\n  } else if (Array.isArray(types) && types[0].constructor === Section) {\n    types = types.map(function(TypedSection) {\n      return TypedSection.prototype.type;\n    });\n  }\n\n  types = types.map(function(type) {\n    return type.toLowerCase();\n  });\n\n  return types;\n}\n\nfunction normalizeContainers(containers) {\n  // Nodelist with entries\n  if (NodeList.prototype.isPrototypeOf(containers) && containers.length > 0) {\n    containers = Array.prototype.slice.call(containers);\n\n    // Empty Nodelist\n  } else if (\n    NodeList.prototype.isPrototypeOf(containers) &&\n    containers.length === 0\n  ) {\n    containers = [];\n\n    // Handle null (document.querySelector() returns null with no match)\n  } else if (containers === null) {\n    containers = [];\n\n    // Single DOM element\n  } else if (!Array.isArray(containers) && containers instanceof Element) {\n    containers = [containers];\n  }\n\n  return containers;\n}\n\nif (window.Shopify.designMode) {\n  document.addEventListener('shopify:section:load', function(event) {\n    var id = event.detail.sectionId;\n    var container = event.target.querySelector(\n      '[' + SECTION_ID_ATTR + '=\"' + id + '\"]'\n    );\n\n    if (container !== null) {\n      load(container.getAttribute(SECTION_TYPE_ATTR), container);\n    }\n  });\n\n  document.addEventListener('shopify:section:unload', function(event) {\n    var id = event.detail.sectionId;\n    var container = event.target.querySelector(\n      '[' + SECTION_ID_ATTR + '=\"' + id + '\"]'\n    );\n    var instance = getInstances(container)[0];\n\n    if (typeof instance === 'object') {\n      unload(container);\n    }\n  });\n\n  document.addEventListener('shopify:section:select', function(event) {\n    var instance = getInstanceById(event.detail.sectionId);\n\n    if (typeof instance === 'object') {\n      instance.onSelect(event.detail.load);\n    }\n  });\n\n  document.addEventListener('shopify:section:deselect', function(event) {\n    var instance = getInstanceById(event.detail.sectionId);\n\n    if (typeof instance === 'object') {\n      instance.onDeselect();\n    }\n  });\n\n  document.addEventListener('shopify:block:select', function(event) {\n    var instance = getInstanceById(event.detail.sectionId);\n\n    if (typeof instance === 'object') {\n      instance.onBlockSelect(event.detail.blockId, event.detail.load);\n    }\n  });\n\n  document.addEventListener('shopify:block:deselect', function(event) {\n    var instance = getInstanceById(event.detail.sectionId);\n\n    if (typeof instance === 'object') {\n      instance.onBlockDeselect(event.detail.blockId);\n    }\n  });\n}\n"],"sourceRoot":""}